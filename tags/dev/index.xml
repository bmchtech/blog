<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Dev on beanmachine tech.</title><link>https://beanmachine.alt.icu/tags/dev/</link><description>Recent content in Dev on beanmachine tech.</description><generator>Hugo</generator><language>en</language><copyright>Â© 2019-2024. CC BY-NC-SA 4.0</copyright><lastBuildDate>Sat, 19 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://beanmachine.alt.icu/tags/dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Investigating Multiplication on the Gameboy Advance</title><link>https://beanmachine.alt.icu/post/multiply/</link><pubDate>Sat, 19 Oct 2024 00:00:00 +0000</pubDate><guid>https://beanmachine.alt.icu/post/multiply/</guid><description>&lt;p>The Gameboy Advance has a pretty neat CPU - the ARM7TDMI. And by neat, I mean a chaotic and
sadistic bundle of questionable design decisions. Seriously, they decided that the program counter should
be a &lt;em>general purpose register&lt;/em>. Why??? Insert simile here. I&amp;rsquo;m not even joking, you can use the program
counter as the output to, say, an XOR instruction. Or an AND instruction.&lt;/p></description></item><item><title>Porting D to GBA</title><link>https://beanmachine.alt.icu/post/d_on_gba/</link><pubDate>Tue, 08 Feb 2022 00:00:00 +0000</pubDate><guid>https://beanmachine.alt.icu/post/d_on_gba/</guid><description>&lt;div id="outline-container-intro" class="outline-2">
&lt;h2 id="intro">
intro
&lt;/h2>
&lt;div id="outline-text-intro" class="outline-text-2">
&lt;p>&lt;a href="https://dlang.org/">D&lt;/a> is an &lt;a href="https://tour.dlang.org/">excellent
language&lt;/a> and we wanted it ported to GBA.&lt;/p>
&lt;div id="outline-container-why-port-d" class="outline-3">
&lt;h3 id="why-port-d">
why port D?
&lt;/h3>
&lt;div id="outline-text-why-port-d" class="outline-text-3">
&lt;p>initially, when we began developing for the GBA, we used
&lt;a href="https://devkitpro.org/wiki/Getting_Started">devkitarm&lt;/a> as a build
toolchain, and the
&lt;a href="https://github.com/redthing1/duster/blob/ee741183d9a19e3759a1cc11427d01751a13e2d3/src/DusterGBA/Makefile">makefiles&lt;/a>
I created for &lt;a href="https://github.com/redthing1/dusk">dusk&lt;/a>, which in turn
were based on tonc makefiles. this worked fine and all, but I really
don&amp;#39;t love C; it has simplicity going for it, but it&amp;#39;s full of ugly
syntax, extremely unsafe code, and hidden pitfalls.&lt;/p></description></item><item><title>Explaining GBA Real-Time Clock (RTC)</title><link>https://beanmachine.alt.icu/post/rtc/</link><pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate><guid>https://beanmachine.alt.icu/post/rtc/</guid><description>&lt;h2 id="intro">intro&lt;/h2>
&lt;p>there&amp;rsquo;s not much documentation online about how the GBA RTC works, so this blog post will attempt to demystify that. to be honest, i still don&amp;rsquo;t fully know how the RTC works. i&amp;rsquo;ll try to explain what i &lt;em>do&lt;/em> know, but DISCLAIMER: what i say may not be 100% accurate. you should be able to successfully emulate a working RTC though using this blogpost.&lt;/p></description></item></channel></rss>